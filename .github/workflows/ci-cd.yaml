name: CI/CD
on:
  push:
    branches: [dev, test, main]
    tags: ['*']
  pull_request:
    branches: [dev, test, main]
jobs:       
  push_to_registry:
    name: Build, Test and Push to GHCR
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Prepare
        id: prep
        run: |
          REGISTRY=ghcr.io
          DOCKER_IMAGE=${REGISTRY}/${{ github.repository }}/ssp
          VERSION=${GITHUB_REF#refs/heads/}-${GITHUB_RUN_ID}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAG="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tag::${TAG}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Test
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          target: test
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          target: runtime
          push: true
          tags: ${{ steps.prep.outputs.tag }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check terraform/aws

      - name: Terraform Init
        id: init
        run: |
          export TF_WORKSPACE=${GITHUB_REF#refs/*/}
          terraform init terraform/aws

      - name: Terraform Validate
        id: validate
        run: terraform validate terraform/aws

      - name: Terraform Plan
        id: plan
        run: |
          echo "account_name = ${GITHUB_REF#refs/*/}" > terraform/aws/gh.auto.tfvars
          echo "client_app_image = ${{ steps.prep.outputs.tag }}" >> terraform/aws/gh.auto.tfvars
          terraform plan terraform/aws 
